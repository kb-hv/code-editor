{"version":3,"sources":["components/Editor.js","components/App.js","index.js"],"names":["Editor","props","lang","theme","onChange","value","className","mode","width","focus","editorProps","$blockScrolling","wrapEnabled","highlightActiveLine","autoScrollEditorIntoView","fontSize","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","showGutter","App","useState","html","setHTML","css","setCSS","javascript","setJavaScript","srcDoc","setSrcDoc","useEffect","console","log","selectSection","event","navbarName","navbarContent","navbarLinks","document","getElementsByClassName","i","length","style","display","replace","currentTarget","autoFocus","autofocus","onClick","title","sandbox","height","frameBorder","ReactDOM","render","StrictMode","getElementById"],"mappings":"uRAae,SAASA,EAAOC,GAC3B,IAAQC,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,SAAUC,EAAUJ,EAAVI,MAI/B,OACI,qBAAKC,UAAU,mBAAf,SACI,cAAC,IAAD,CACIC,KAAML,EACNE,SAPS,SAACC,GAClBD,EAASC,IAODA,MAAOA,EACPG,MAAM,OACNL,MAAOA,EACPM,OAAO,EACPC,YAAa,CAAEC,iBAAiB,GAChCC,aAAa,EACbC,qBAAqB,EACrBC,0BAA0B,EAC1BC,SAAU,GACVT,UAAU,cACVU,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,EACTC,YAAY,OCoCjBC,MAxEf,WAEI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAGA,EAA4BN,mBAAS,MAArC,mBAAOO,EAAP,KAAeC,EAAf,KAGAC,qBAAU,WACNC,QAAQC,IAAIV,GACZO,EAAU,8BAAD,OACIL,EADJ,uCAEGF,EAFH,wCAGKI,EAHL,kCAKV,CAACJ,EAAME,EAAKE,IAGf,IAAMO,EAAgB,SAACC,EAAOC,GAC1B,IAAIC,EAAeC,EACnBD,EAAgBE,SAASC,uBAAuB,kBAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAcK,OAAQD,IACtCJ,EAAcI,GAAGE,MAAMC,QAAU,OAErCN,EAAcC,SAASC,uBAAuB,gBAC9C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAYI,OAAQD,IACpCH,EAAYG,GAAGrC,UAAYkC,EAAYG,GAAGrC,UAAUyC,QAAQ,UAAW,IAE3EN,SAASC,uBAAuBJ,GAAY,GAAGO,MAAMC,QAAU,QAC/DT,EAAMW,cAAc1C,WAAa,WAGrC,OACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,eAAf,yBAGA,sBAAKA,UAAU,gBAAf,UACI,wBAAQA,UAAU,kCAAkC2C,WAAS,EAACC,WAAS,EAACC,QAAS,SAACd,GAAD,OAAWD,EAAcC,EAAO,gBAAjH,wBACA,wBAAQ/B,UAAU,eAAe6C,QAAS,SAACd,GAAD,OAAWD,EAAcC,EAAO,eAA1E,uBACA,wBAAQ/B,UAAU,eAAe6C,QAAS,SAACd,GAAD,OAAWD,EAAcC,EAAO,cAA1E,4BAGR,qBAAK/B,UAAU,mBAAf,uBACA,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,oCAAf,SACI,cAACN,EAAD,CAAQM,UAAU,SAASJ,KAAK,OAAOC,MAAM,cAAcE,MAAOoB,EAAMrB,SAAUsB,MAEtF,qBAAKpB,UAAU,4BAAf,SACI,cAACN,EAAD,CAAQM,UAAU,SAASJ,KAAK,MAAMC,MAAM,iBAAiBE,MAAOsB,EAAKvB,SAAUwB,MAEvF,qBAAKtB,UAAU,2BAAf,SACI,cAACN,EAAD,CAAQM,UAAU,SAASJ,KAAK,aAAaC,MAAM,YAAYE,MAAOwB,EAAYzB,SAAU0B,SAGpG,qBAAKxB,UAAU,eAAf,SACI,wBACI8C,MAAM,OACNrB,OAAQA,EACRsB,QAAQ,eACR7C,MAAM,OACN8C,OAAO,OACPC,YAAY,eC/DhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,W","file":"static/js/main.f8693995.chunk.js","sourcesContent":["import React from 'react'\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-min-noconflict/ext-language_tools'\r\nimport 'ace-builds/src-noconflict/mode-html'\r\nimport 'ace-builds/src-noconflict/snippets/html'\r\nimport 'ace-builds/src-min-noconflict/mode-javascript';\r\nimport 'ace-builds/src-min-noconflict/snippets/javascript';\r\nimport 'ace-builds/src-min-noconflict/mode-css';\r\nimport 'ace-builds/src-min-noconflict/snippets/css';\r\nimport 'ace-builds/src-noconflict/theme-vibrant_ink'\r\nimport 'ace-builds/src-noconflict/theme-pastel_on_dark'\r\nimport 'ace-builds/src-noconflict/theme-merbivore'\r\n\r\nexport default function Editor(props) {\r\n    const { lang, theme, onChange, value } = props\r\n    let onEditorChange = (value) => {\r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <AceEditor\r\n                mode={lang}\r\n                onChange={onEditorChange}\r\n                value={value}\r\n                width=\"100%\"\r\n                theme={theme}\r\n                focus={true}\r\n                editorProps={{ $blockScrolling: true }}\r\n                wrapEnabled={true}\r\n                highlightActiveLine={true}\r\n                autoScrollEditorIntoView={true}\r\n                fontSize={16}\r\n                className=\"ace-wrapper\"\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    showLineNumbers: true,\r\n                    tabSize: 4,\r\n                    showGutter: true\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Editor from \"./Editor\";\r\n\r\nfunction App() {\r\n    // code content\r\n    const [html, setHTML] = useState('')\r\n    const [css, setCSS] = useState('')\r\n    const [javascript, setJavaScript] = useState('')\r\n\r\n    // set live view content\r\n    const [srcDoc, setSrcDoc] = useState('fd')\r\n\r\n    // reload everytime code changes\r\n    useEffect(() => {\r\n        console.log(html)\r\n        setSrcDoc(`<html>\r\n            <style>${css}</style>\r\n            <body>${html}</body>\r\n            <script>${javascript}</script>\r\n        </html>`)\r\n    }, [html, css, javascript])\r\n\r\n    // switch code tabs\r\n    const selectSection = (event, navbarName) => {\r\n        let navbarContent, navbarLinks;\r\n        navbarContent = document.getElementsByClassName(\"navbar-content\");\r\n        for (let i = 0; i < navbarContent.length; i++) {\r\n            navbarContent[i].style.display = \"none\";\r\n        }\r\n        navbarLinks = document.getElementsByClassName(\"navbar-links\");\r\n        for (let i = 0; i < navbarLinks.length; i++) {\r\n            navbarLinks[i].className = navbarLinks[i].className.replace(\" active\", \"\");\r\n        }\r\n        document.getElementsByClassName(navbarName)[0].style.display = \"block\";\r\n        event.currentTarget.className += \" active\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"navbar nav-head\">\r\n                <div className=\"navbar-title\">\r\n                    CODE EDITOR\r\n                </div>\r\n                <div className=\"navbar-button\">\r\n                    <button className=\"navbar-links active html-button\" autoFocus autofocus onClick={(event) => selectSection(event, 'htmlcontent')}>index.html</button>\r\n                    <button className=\"navbar-links\" onClick={(event) => selectSection(event, 'csscontent')}>index.css</button>\r\n                    <button className=\"navbar-links\" onClick={(event) => selectSection(event, 'jscontent')}>index.js</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar live-head\">Live View</div>\r\n            <div className=\"section code\">\r\n                <div className=\"navbar-content htmlcontent active\">\r\n                    <Editor className=\"editor\" lang=\"html\" theme=\"vibrant_ink\" value={html} onChange={setHTML} />\r\n                </div>\r\n                <div className=\"navbar-content csscontent\">\r\n                    <Editor className=\"editor\" lang=\"css\" theme=\"pastel_on_dark\" value={css} onChange={setCSS} />\r\n                </div>\r\n                <div className=\"navbar-content jscontent\">\r\n                    <Editor className=\"editor\" lang=\"javascript\" theme=\"merbivore\" value={javascript} onChange={setJavaScript} />\r\n                </div>\r\n            </div>\r\n            <div className=\"section live\">\r\n                <iframe\r\n                    title=\"live\"\r\n                    srcDoc={srcDoc}\r\n                    sandbox=\"allow-script\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    frameBorder=\"none\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}